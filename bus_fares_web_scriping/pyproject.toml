

[tool.pytest.ini_options]
minversion = "6.0"
# opts:
# `--strict-markers` - Raise error on unexpected pytest markers being used (add new markers to `markers` config)
# `-nauto` - parallelise over as many threads are available (uses pytest-xdist). This auto-selects 1 thread when using the `--pdb` debugging flag.
# `--nbmake --nbmake-kernel=bus_fares_web_scriping` - test example notebooks using the "bus_fares_web_scriping" notebook kernel (uses nbmake)
# `--cov --cov-report=xml --cov-config=pyproject.toml` - generate coverage report for tests (uses pytest-cov; call `--no-cov` in CLI to switch off; `--cov-config` include to avoid bug)
# `-m 'not high_mem'` - Do not run tests marked as consuming large amounts of memory (call `-m "high_mem"` in CLI to invert this; only `high_mem` marked tests will be run)
# `-p no:memray` - Do not use the memray memory profiling plugin (call `-p memray` in CLI to switch on memory profiling)
addopts = "-rav --strict-markers -nauto --nbmake --nbmake-kernel=bus_fares_web_scriping --cov --cov-report=xml --cov-config=pyproject.toml -m 'not high_mem' -p no:memray"
testpaths = ["tests", "examples"]

# to mark a test, decorate it with `@pytest.mark.[marker-name]`
markers = ["high_mem", "limit_memory"]
filterwarnings = [
    # https://github.com/pytest-dev/pytest-xdist/issues/825
    "ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning",
]

[tool.coverage.run]
branch = true
source = ["src/"]

[tool.coverage.report]
fail_under = 89

[tool.coverage.html]
directory = "reports/coverage"

[tool.coverage.xml]
output = "reports/coverage/coverage.xml"

[tool.ruff]
line-length = 100
preview = true # required to activate many pycodestyle errors and warnings as of 2024-03-13

[tool.ruff.format]
exclude = [".*.egg-info", "requirements/**"]
skip-magic-trailing-comma = true
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint]
select = [
    # pycodestyle errors
    "E",
    # pycodestyle warnings
    "W",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # Docstrings
    "D"
]
ignore = [
    # here and below, rules are redundant with formatter, see
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "E501",
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300"
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

# Ignore `E402` (import violations) and `F401` (unused imports) in all `__init__.py` files
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"*.ipynb" = ["E402"]
"tests/*" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 200
ignore-overlong-task-comments = true

[tool.setuptools.packages.find]
include = ["bus_fares_web_scriping*"]
where = ["src"]

[tool.setuptools.package-data]
# Add file globs from the source code directory if they include non-py files that should be packaged
# E.g. "fixtures/**/*"
# "py.typed" is added by default. It allows `mypy` to register the package as having type hints.
bus_fares_web_scriping = ["py.typed"]


[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
classifiers = [
        "Development Status :: 2 - Pre-Alpha",
        "Intended Audience :: Developers",
        "Natural Language :: English",
        "Programming Language :: Python :: 3",
    ]

name = "cml_bus_fares_web_scriping"
authors = [
    { name = "Luis Parra", email = "luis.parramorales@arup.com" },
]
maintainers = []
description = "Contains reference code to download the bus services data from operators' web pages"
readme = "README.md"
requires-python = ">=3.8"
keywords = ["cml_bus_fares_web_scriping", "arup"]
dynamic = ["dependencies", "optional-dependencies", "version"]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements/base.txt"] }
version = { attr = "bus_fares_web_scriping.__version__" }
[project.scripts]
bus_fares_web_scriping="bus_fares_web_scriping.cli:cli"

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ["requirements/dev.txt"] }

[project.urls]
repository = "https://github.com/arup-group/bus_fares_web_scriping"
documentation = "https://arup-group.github.io/bus_fares_web_scriping"
changelog = "https://github.com/arup-group/bus_fares_web_scriping/blob/main/CHANGELOG.md"
